
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\01_model_output.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_01_model_output.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_01_model_output.py:


Ex 1. Loading and Processing Hydrological Model Outputs
==================================================

This example demonstrates how to load and process outputs from different 
hydrological models using PyHydroGeophysX. We show examples for both 
ParFlow and MODFLOW models.

The example covers:
- Loading ParFlow saturation and porosity data
- Loading MODFLOW water content and porosity data  
- Basic visualization of the loaded data

This is typically the first step in any workflow where you want to
convert hydrological model outputs to geophysical data.

.. GENERATED FROM PYTHON SOURCE LINES 17-41

.. code-block:: Python


    import os
    import sys
    import numpy as np
    import matplotlib.pyplot as plt

    # For Jupyter notebooks, use the current working directory
    try:
        # For regular Python scripts
        current_dir = os.path.dirname(os.path.abspath(__file__))
    except NameError:
        # For Jupyter notebooks
        current_dir = os.getcwd()
    # Add the parent directory (OPEN_ERT) to the path
    parent_dir = os.path.dirname(os.path.dirname(current_dir))
    if parent_dir not in sys.path:
        sys.path.append(parent_dir)

    from PyHydroGeophysX.model_output.parflow_output import ParflowSaturation, ParflowPorosity

    from PyHydroGeophysX.model_output.modflow_output import MODFLOWWaterContent, MODFLOWPorosity




.. GENERATED FROM PYTHON SOURCE LINES 42-43

## 1. Parflow example

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Load saturation data

.. GENERATED FROM PYTHON SOURCE LINES 46-64

.. code-block:: Python

    saturation_processor = ParflowSaturation(
        model_directory="C:/Users/HChen8/Documents/GitHub/PyHydroGeophysX/examples/data/parflow/test2",
        run_name="test2"
    )
    saturation = saturation_processor.load_timestep(200)  # Load first timestep

    # Load porosity data
    porosity_processor = ParflowPorosity(
        model_directory="C:/Users/HChen8/Documents/GitHub/PyHydroGeophysX/examples/data/parflow/test2",
        run_name="test2"
    )
    porosity = porosity_processor.load_porosity()

    mask = porosity_processor.load_mask()
    mask.shape
    porosity[mask==0] = np.nan
    saturation[mask==0] = np.nan


.. GENERATED FROM PYTHON SOURCE LINES 65-77

.. code-block:: Python

    print(saturation.shape)
    # Plotting the data
    plt.figure(figsize=(10, 4))
    plt.subplot(1, 2, 1)
    plt.imshow(porosity[19, :, :], cmap='viridis')
    plt.colorbar(label='Porosity')
    plt.gca().invert_yaxis()
    plt.subplot(1, 2, 2)
    plt.imshow(saturation[19, :, :], cmap='viridis')
    plt.colorbar(label='Saturation')
    plt.gca().invert_yaxis()


.. GENERATED FROM PYTHON SOURCE LINES 78-79

## 2. MODFLOW example

.. GENERATED FROM PYTHON SOURCE LINES 84-85

These would be your actual data files

.. GENERATED FROM PYTHON SOURCE LINES 85-114

.. code-block:: Python

    data_dir = "C:/Users/HChen8/Documents/GitHub/PyHydroGeophysX/examples/data/"
    modflow_dir = os.path.join(data_dir, "modflow")
    idomain = np.loadtxt(os.path.join(modflow_dir, "id.txt"))

    # Initialize MODFLOW water content processor
    water_content_processor = MODFLOWWaterContent(
        model_directory=modflow_dir,  # Changed from sim_ws
        idomain=idomain
    )

    # Load water content for a specific timestep
    timestep = 1
    water_content = water_content_processor.load_timestep(timestep)

    print(water_content.shape)


    # Path to your MODFLOW model directory

    model_name = "TLnewtest2sfb2"  # Your model name

    # 1. Create an instance of the MODFLOWPorosity class
    porosity_loader = MODFLOWPorosity(
        model_directory=modflow_dir,
        model_name=model_name
    )
    # 2. Load the porosity data
    porosity_data = porosity_loader.load_porosity()


.. GENERATED FROM PYTHON SOURCE LINES 115-116

Plotting the data

.. GENERATED FROM PYTHON SOURCE LINES 116-131

.. code-block:: Python



    porosity_data1 = porosity_data[0, :, :]
    porosity_data1[idomain==0] = np.nan

    plt.figure(figsize=(10, 4))
    plt.subplot(1, 2, 1)
    plt.imshow(porosity_data1[ :, :], cmap='viridis')
    plt.colorbar(label='Porosity')

    plt.subplot(1, 2, 2)
    plt.imshow(water_content[0, :, :], cmap='viridis')
    plt.colorbar(label='Water Content')




.. _sphx_glr_download_auto_examples_01_model_output.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: 01_model_output.ipynb <01_model_output.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: 01_model_output.py <01_model_output.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: 01_model_output.zip <01_model_output.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

name: Build and Deploy Documentation

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc
    
    - name: Install documentation dependencies only
      run: |
        python -m pip install --upgrade pip
        pip install sphinx==7.1.2
        pip install sphinx-rtd-theme==1.3.0
        pip install myst-parser==2.0.0
        pip install nbsphinx==0.9.1
        pip install sphinx-copybutton==0.5.2
        pip install sphinx-gallery==0.14.0
        pip install numpy scipy matplotlib tqdm
        # DO NOT install pygimli - it causes conflicts and is mocked anyway
    
    - name: Install package without heavy dependencies
      run: |
        # Create a minimal setup for docs
        pip install -e . --no-deps
        # Then install only the dependencies we actually need
        pip install numpy scipy matplotlib tqdm
    
    - name: Create minimal example data
      run: |
        mkdir -p examples/data examples/results
        python -c "
import numpy as np
import os
# Create all necessary directories
for dir_name in ['examples/data', 'examples/results', 'examples/results/workflow_example', 
                 'examples/results/TL_measurements', 'examples/results/TL_measurements/appres']:
    os.makedirs(dir_name, exist_ok=True)

# Create minimal data files
np.save('examples/data/Watercontent.npy', np.random.rand(12, 3, 50, 40) * 0.3)
np.save('examples/data/Porosity.npy', np.random.rand(3, 50, 40) * 0.4 + 0.1)
np.savetxt('examples/data/id.txt', np.ones((50, 40)), fmt='%d')
np.savetxt('examples/data/top.txt', np.random.rand(50, 40) * 10 + 1600)

# Create bot.npy
bot_data = np.random.rand(15, 50, 40) * 5 + 1590
np.save('examples/data/bot.npy', bot_data)

# Create precip.npy  
precip_data = np.random.rand(365) * 10
np.save('examples/data/precip.npy', precip_data)

print('Example data created successfully')
"
    
    - name: Build documentation
      run: |
        cd docs
        sphinx-apidoc -f -o source/api ../PyHydroGeophysX
        sphinx-build -b html source build/html -v
      env:
        MPLBACKEND: Agg
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
        force_orphan: true